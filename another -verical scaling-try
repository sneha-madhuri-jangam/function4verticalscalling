import json
import boto3
import time
import os

client = boto3.client('ec2', region_name=os.environ.get('AWS_REGION'))

def lambda_handler(event, context):
    """
    Stops a specified EC2 instance, changes its instance type to t2.medium, and then starts it.
    """
    instance_id = 'i-0e582a50434b52647'  # Replace with your Instance ID

    try:
        print(f"Stopping instance: {instance_id}")
        client.stop_instances(InstanceIds=[instance_id])
        waiter = client.get_waiter('instance_stopped')
        waiter.wait(InstanceIds=[instance_id])
        print(f"Instance {instance_id} stopped.")

        print(f"Modifying instance type of {instance_id} to t2.medium")
        client.modify_instance_attribute(InstanceId=instance_id, Attribute='instanceType', Value='t2.micro')
        print(f"Instance type of {instance_id} changed to t2.medium.")

        print(f"Starting instance: {instance_id}")
        client.start_instances(InstanceIds=[instance_id])
        print(f"Instance {instance_id} started.")

        return {
            'statusCode': 200,
            'body': json.dumps(f'Successfully changed instance {instance_id} to t2.medium!')
        }

    except Exception as e:
        print(f"Error processing instance {instance_id}: {e}")
        return {
            'statusCode': 500,
            'body': json.dumps(f'Error changing instance type: {str(e)}')
        }

if __name__ == "__main__":
    # This is for local testing (not run by Lambda directly)
    os.environ['AWS_REGION'] = 'us-east-1'  # Set your desired AWS region
    test_event = {}
    test_context = {}
    result = lambda_handler(test_event, test_context)
    print(result)
